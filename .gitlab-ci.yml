#  Copyright (c) 2021. Berlin Institute of Health (BIH) and Deutsches Krebsforschungszentrum (DKFZ).
#
#  Distributed under the MIT License. Full text at
#
#      https://gitlab.com/one-touch-pipeline/weskit/api/-/blob/master/LICENSE
#
#  Authors: The WESkit Team

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
services:
  - docker:dind

cache:
  key: cache-for-all-branches
  paths:
    - /opt/cache/pip
    - /opt/conda/pkgs
    - /root/.conda/pkgs

variables:
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  PIP_CACHE_DIR: "/opt/cache/pip"
  CONTAINER_UID: "35671"
  CONTAINER_USER: weskit
  CONTAINER_GID: "35671"
  CONTAINER_GROUP: weskit
  REGISTRY: registry.gitlab.com

stages:
  - build          # Build the branch's api-base container
  - test           # Test the code using the branch's api-base container
  - deploy         # Build the deployment container, using the branch's api-base container

# See
# https://docs.gitlab.com/ee/user/project/deploy_tokens/index.html
# https://docs.gitlab.com/ee/user/packages/container_registry/#authenticate-with-the-container-registry
# https://gitlab.com/one-touch-pipeline/weskit/api/-/settings/repository/deploy_token
#
# Use this hidden job to `extend` deployment to registry and container tests jobs.
# Note that CI_DEPLOY_USER and CI_DEPLOY_PASSWORD are automatically set, because of the deploy key
# with the name "gitlab-deploy-token" (Settings -> Repository -> Deploy Tokens).
.gitlab-registry:
  image: docker:stable
  before_script:
    - docker info
    - docker login -u "$CI_DEPLOY_USER" -p "$CI_DEPLOY_PASSWORD" "$REGISTRY"

# Build-image $REGISTRY/$CONTAINER_IMAGE_NAME:$VERSION_TAG from $DOCKER_FILE.
# The corresponding variables need to be set (REGISTRY is set globally, though).
.build_image:
  extends: .gitlab-registry
  script:
    - |
      cat - <<THE_END
      CI_PIPELINE_SOURCE='$CI_PIPELINE_SOURCE'
      CI_COMMIT_SHORT_SHA='$CI_COMMIT_SHORT_SHA'
      CI_COMMIT_TAG='$CI_COMMIT_TAG'
      CI_COMMIT_BRANCH='$CI_COMMIT_BRANCH'
      Publishing '$REGISTRY/$CONTAINER_IMAGE_NAME:$VERSION_TAG'
      From '$DOCKER_FILE'
      THE_END
    - |
      docker build \
        --build-arg USER_ID="$CONTAINER_UID" \
        --build-arg USER="$CONTAINER_USER" \
        --build-arg GROUP_ID="$CONTAINER_GID" \
        --build-arg GROUP="$CONTAINER_GROUP" \
        -t "$REGISTRY/$CONTAINER_IMAGE_NAME:$VERSION_TAG" \
        -f "$DOCKER_FILE" \
        .
    - docker push "$REGISTRY/$CONTAINER_IMAGE_NAME:$VERSION_TAG"

build_branch_base_image:
  stage: build
  extends: .build_image
  rules:
    # The base-image should be built for merge result pipelines and only if the environment.yaml
    # or the Dockerfile-Base were changed. Otherwise, no image should be built.
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '"$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" = ""'
      when: never
    - changes:
        compare_to: 'refs/heads/main'
        paths:
          - environment.yaml
          - Dockerfile-Base
  variables:
    DOCKER_FILE: Dockerfile-Base
    CONTAINER_IMAGE_NAME: one-touch-pipeline/weskit/api-base
    VERSION_TAG: "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"

test:
  # Use the image that may have been built in the last phase (build).
  image: "$REGISTRY/$CONTAINER_IMAGE_NAME:$CI_COMMIT_BRANCH"
  stage: test
  needs:
    - job: build_branch_base_image
      optional: true
  rules:
    # Run the tests in merge-commits, and in all branches with new commits, unless they have an
    # open merge request.
    # https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"    # yes, on merge request pipeline
    - if: $CI_COMMIT_TAG                                  # yes, if a tagged image is created
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS    # not, if there is on open MR
      when: never
    - if: $CI_COMMIT_BRANCH                               # yes, on new commits
#    - if: $CI_COMMIT_REF_PROTECTED                        # not, if this is a protected branch
#      when: never                                         #      because tested already in merge
#                                                          #      result pipeline
  script:
    - mypy --install-types --non-interactive weskit/ tests/
    - flake8
    - bandit -r weskit/ uwsgi_server/
    - cp tests/remote-template.yaml tests/remote.yaml
    - python -m pytest -vvv --cov=weskit/ --cov-report term-missing -m "not slow and not ssh"

build_latest_base_image:
  stage: deploy
  extends: .build_image
  needs:
    # Only build latest base-images on master, if the QA jobs succeeded.
    - job: test
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        paths:
          - environment.yaml
          - Dockerfile-Base
  variables:
    DOCKER_FILE: Dockerfile-Base
    CONTAINER_IMAGE_NAME: one-touch-pipeline/weskit/api-base
    VERSION_TAG: latest

build_latest_image:
  stage: deploy
  extends: .build_image
  needs:
    # Only build latest images on master, if the QA jobs succeeded.
    - job: test
    # Build the latest image only after the latest base-image was build, if one had to be built.
    - job: build_latest_base_image
      optional: true
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        paths:
          - environment.yaml
          - Dockerfile-Base
          - Dockerfile
  variables:
    DOCKER_FILE: Dockerfile
    CONTAINER_IMAGE_NAME: one-touch-pipeline/weskit/api
    VERSION_TAG: latest

# Build images for tagged commits. Commit tags with the pattern \d+\.\d+\.\d+
# are not garbage collected.
build_tagged_image:
  stage: deploy
  extends: .build_image
  # Implicitly depends on one-touch-pipeline/weskit/api-base:latest. That latest image, however,
  # was not necessarily build recently, but only for the last conda environment change.
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    DOCKER_FILE: Dockerfile
    CONTAINER_IMAGE_NAME: one-touch-pipeline/weskit/api
    VERSION_TAG: $CI_COMMIT_TAG
